    expect(response.status).toBe(200);
    expect(data.streams).toHaveLength(4);
    expect(data.streams.every((stream: any) => stream.active)).toBe(true);
    expect(data.streams.every((stream: any) => stream.embedUrl.includes('https://www.youtube.com/embed/'))).toBe(
      true
    );
  });

  it('returns only NodvÃ¤st for day 2', async () => {
    const request = new NextRequest('http://localhost/api/streams?day=2');
