{
  "metadata": {
    "agent_id": "Gemini 2.5 Pro Ultra - Deep Research & Planning (v2.0)",
    "timestamp": "2025-10-14T09:53:01Z",
    "execution_time_ms": 0,
    "status": "completed"
  },
  "1. Overview Table": [
    {
      "Task": "Network Infrastructure & QoS Setup",
      "Tools": "ASUS RT-AX86U Pro, Asuswrt-Merlin, FlexQoS",
      "Risk Level": "High",
      "Next Agent": "NetworkOps_Agent"
    },
    {
      "Task": "Streaming Hardware & Software Configuration (Multi-Instance)",
      "Tools": "OBS Studio (4x Instances), High-Spec PC (Ryzen 9/i9, RTX 3080+)",
      "Risk Level": "Critical",
      "Next Agent": "AV_Production_Agent"
    },
    {
      "Task": "YouTube Live Event Management",
      "Tools": "YouTube Studio (Live Control Room)",
      "Risk Level": "Low",
      "Next Agent": "Platform_Manager_Agent"
    },
    {
      "Task": "Web Platform Development (Next.js 15)",
      "Tools": "Next.js 15, TypeScript, Tailwind CSS, i18next",
      "Risk Level": "Medium",
      "Next Agent": "Frontend_Dev_Agent"
    },
    {
      "Task": "InfraNodus Integration (Visualization)",
      "Tools": "InfraNodus (iframe embedding)",
      "Risk Level": "Low",
      "Next Agent": "Frontend_Dev_Agent"
    },
    {
      "Task": "Accessibility (WCAG 2.2 AA) & Localization QA",
      "Tools": "Axe DevTools, Lighthouse, RTL Testing",
      "Risk Level": "Medium",
      "Next Agent": "QA_Agent"
    }
  ],
  "2. Manuals Index": [
    {
      "Title": "ASUS RT-AX86U Pro Official Support & Manuals",
      "URL": "https://www.asus.com/in/supportonly/rt-ax86u%20pro/helpdesk_manual/",
      "Abstract": "The official ASUS support page containing user manuals, quick start guides, and firmware updates for the RT-AX86U Pro. Includes manuals in multiple languages, such as Swedish (Version SW22539) and English (Version E23427). [C1]",
      "Access date": "2025-10-14"
    },
    {
      "Title": "Asuswrt-Merlin Documentation (Wiki)",
      "URL": "https://www.asuswrt-merlin.net/docs",
      "Abstract": "The official documentation portal for the Asuswrt-Merlin custom firmware, linking directly to the GitHub Wiki. This resource provides guides on installation, advanced features, and configuration options, including Adaptive QoS and script support (e.g., FlexQoS). [C2]",
      "Access_date": "2025-10-14"
    },
    {
      "Title": "OBS Studio Launch Parameters (Multi-Instance)",
      "URL": "https://obsproject.com/kb/launch-parameters",
      "Abstract": "OBS documentation detailing command-line arguments for advanced configuration. This includes the \`--multi\` parameter, which is required to run multiple instances of OBS simultaneously on the same machine to stream distinct content feeds. [C3]",
      "Access date": "2025-10-14"
    },
    {
      "Title": "InfraNodus: Network Analysis and Visualization Documentation",
      "URL": "https://infranodus.com/docs/network-analysis",
      "Abstract": "Documentation detailing InfraNodus methodologies and features. It confirms that public graphs can be embedded on external websites via URL/iframe, which is the primary visualization integration method. [C4]",
      "Access date": "2025-10-14"
    },
    {
      "Title": "YouTube Live Streaming API Overview",
      "URL": "https://developers.google.com/youtube/v3/live/getting-started",
      "Abstract": "Official Google Developer documentation detailing the YouTube Live Streaming API. It covers the management of live events (broadcasts) and video streams, authorization, and the lifecycle of a broadcast. [C5]",
      "Access date": "2025-10-14"
    },
    {
      "Title": "Create a YouTube live stream with an encoder (Live Control Room)",
      "URL": "https://support.google.com/youtube/answer/2907883?hl=en",
      "Abstract": "The official YouTube Help guide for setting up streams via the Live Control Room. It details the manual process of creating events, obtaining Stream URLs and Keys, and monitoring stream health. [C6]",
      "Access date": "2025-10-14"
    }
  ],
  "3. Research Memo": {
    "Q1": {
      "Question": "What is YouTube's concurrent live event limit per channel?",
      "Official_policy": "YouTube's official documentation (API [C5] and Help Center [C6]) does not state an explicit numerical limit on the number of concurrent encoder-based live streams allowed per channel. Restrictions primarily relate to policy violations or YouTube TV viewing limits [C7], which are irrelevant here. Community consensus indicates that multiple concurrent streams (e.g., 5-10) are feasible for verified channels. The requirement for 4 streams is considered low risk.",
      "Workarounds": "N/A. If an undocumented limit is encountered, the contingency plan is to utilize multiple pre-verified YouTube channels."
    },
    "Q2": {
      "Question": "How to configure OBS for 4 simultaneous RTMP streams?",
      "Multi-output_plugins": "The requirement is for 4 distinct streams (Nodväst, Nodsyd, Nodöst, Nodmidd). Plugins like 'Multiple RTMP outputs' stream the *same* OBS Program output to multiple destinations. They do *not* allow streaming different scenes simultaneously [C8].",
      "Performance_requirements": "**Revised Strategy:** The only viable solution using OBS is to run 4 separate instances of OBS Studio simultaneously on the streaming PC, using the \`--multi\` launch argument [C3]. Each instance manages one stream (Scene, Audio Input, Encoder, RTMP Output). This significantly increases hardware demands. A high-end CPU (e.g., Ryzen 9/Core i9) and a robust GPU (e.g., RTX 3080+) are mandatory to handle 4 separate 1080p NVENC encoding sessions simultaneously [C9]."
    },
    "Q3": {
      "Question": "InfraNodus MCP integration - is it possible?",
      "Current_MCP_server_status": "Yes. InfraNodus provides an MCP (Model Context Protocol) server, documented on GitHub [C10]. This server allows integration of InfraNodus analysis capabilities into backend LLM workflows via the InfraNodus API. It requires an API key.",
      "Alternative_embedding_options": "For the frontend visualization requirement in Next.js, the recommended approach remains embedding the interactive graph using an iframe or a shareable URL [C4]. The MCP server is intended for data analysis, not direct visualization embedding."
    },
    "Q4": {
      "Question": "ASUS RT-AX86U Pro QoS for 4x 1080p streams",
      "Fiber_uplink_requirements": "Assuming 1080p 60fps streams, the recommended bandwidth per stream is 5 Mbps to 12 Mbps [C11]. Four streams require a total of 20 Mbps to 48 Mbps. Including a 30-40% buffer for network stability, a minimum stable uplink of ~70 Mbps is required. A 100 Mbps fiber uplink is strongly recommended.",
      "Bandwidth_allocation_strategies": "Utilize Asuswrt-Merlin's Adaptive QoS [C12] to prioritize 'Media Streaming'. For guaranteed prioritization, install the FlexQoS script [C13]. FlexQoS allows creating specific iptables rules to assign the highest priority to the static IP address of the streaming PC."
    }
  },
  "4. Detailed Plans (Markdown Files)": {
    "router_plan.md": "# Router Configuration Plan (ASUS RT-AX86U Pro + Merlin)\n\n## 1. Prerequisites\n1. Firmware: Latest stable Asuswrt-Merlin installed.\n2. Uplink: Verified Fiber connection (Minimum 100 Mbps symmetrical recommended).\n3. Streaming PC: Connected via Ethernet (1Gbps or 2.5Gbps port) and assigned a Static IP (e.g., 192.168.50.10).\n\n## 2. QoS Configuration (Adaptive QoS + FlexQoS)\nObjective: Guarantee uplink bandwidth (~70 Mbps) for the streaming PC.\n\n1. Navigate to \`Adaptive QoS\` > \`QoS\`.\n2. Enable QoS and select \`Adaptive QoS\`.\n3. Set \`Upload Bandwidth\` and \`Download Bandwidth\` manually (e.g., 100 Mbps Up/Down). Use 95% of actual speed to manage bufferbloat.\n4. Select \`Queue Discipline\`: \`fq_codel\` or \`Cake\` (if available) for optimal bufferbloat management.\n5. Select \`Customize\` priority.\n6. Drag \`Video and Audio Streaming\` to the highest priority.\n\n## 3. Advanced Prioritization (FlexQoS)\n1. Install FlexQoS via AMTM (Asuswrt-Merlin Terminal Menu) over SSH (Refer to [C13]).\n2. Navigate to the FlexQoS tab in the GUI.\n3. Create a custom iptables Rule:\n    - Local IP/CIDR: [Static IP of OBS PC, e.g., 192.168.50.10]\n    - Class: Video and Audio Streaming (or highest available priority class)\n    - Apply settings and restart the QoS service.\n\n## 4. Port Forwarding\nNo port forwarding is required for outbound RTMP/RTMPS streaming.\n\n## 5. Failover Strategies (Dual-WAN)\n1. Navigate to \`WAN\` > \`Dual WAN\`.\n2. Configure the primary WAN (Fiber).\n3. Configure a secondary connection (e.g., 5G modem via USB).\n4. Set the mode to \`Fail Over\`.\n5. **Contingency:** If the failover connection cannot sustain ~70 Mbps upload, the A/V team must be alerted immediately to reduce the number of streams or lower the bitrate/resolution (e.g., switch to 720p30fps).",
    "obs_plan.md": "# OBS Configuration Plan (4x Distinct Streams - Multi-Instance Strategy)\n\n**NOTE:** The requirement for 4 distinct streams necessitates running 4 separate instances of OBS Studio simultaneously, as plugins only duplicate the main Program output.\n\n## 1. Hardware Requirements (Critical)\n- CPU: High core count required (e.g., AMD Ryzen 9 7950X, Intel i9-14900K).\n- GPU: Powerful NVIDIA GPU (e.g., RTX 3080 or better) to handle 4 concurrent NVENC sessions.\n- RAM: 32GB minimum, 64GB recommended.\n- Network: Wired 1Gbps or 2.5Gbps connection.\n\n## 2. Software Setup (Multiple Instances)\n1. Install the latest stable OBS Studio.\n2. Create dedicated Windows shortcuts to launch OBS in multi-instance mode (Refer to [C3]):\n    - Target: \`\"C:\\Program Files\\obs-studio\\bin\\64bit\\obs64.exe\" --multi\`\n3. Launch 4 instances of OBS using this shortcut.\n\n## 3. Profile and Scene Management\n1. In each OBS instance, create a unique Profile (File > Profile > New):\n    - Instance 1 Profile: 'DoL2025_Nodväst'\n    - Instance 2 Profile: 'DoL2025_Nodsyd'\n    - Instance 3 Profile: 'DoL2025_Nodöst'\n    - Instance 4 Profile: 'DoL2025_Nodmidd'\n2. Configure the specific A/V input sources for that node within its respective instance (e.g., Capture Card 1 assigned to Instance 1).\n\n## 4. Encoding and Streaming Configuration (Per Instance)\nRepeat the following configuration in all 4 instances:\n\n1. Settings > Video:\n    - Base/Output Resolution: 1920x1080\n    - FPS: 60 (or 30 if hardware constrained)\n2. Settings > Output (Advanced Mode):\n    - Encoder: NVIDIA NVENC H.264.\n    - Rate Control: CBR.\n    - Bitrate: 6000 Kbps (Adjust up to 12000 Kbps based on bandwidth).\n    - Keyframe Interval: 2s.\n    - Preset: Quality or Performance (Monitor GPU load during testing).\n3. Settings > Stream:\n    - Service: YouTube - RTMPS\n    - Enter the unique YouTube Stream Key for the corresponding node (e.g., Instance 1 uses Nodväst key).\n\n## 5. Audio Routing\nEnsure each OBS instance captures only the audio input associated with its specific node (Settings > Audio > Mic/Auxiliary Audio). Careful management of audio devices in the OS is required.\n\n## 6. Performance Optimization and Testing\n1. **Mandatory Stress Test:** This configuration is highly demanding. A full-duration stress test (e.g., 8 hours) is mandatory to verify hardware stability and thermal performance.\n2. Monitor GPU 'Video Encode' utilization (Task Manager/GPU-Z). If utilization consistently hits 100%, reduce the Preset quality, resolution, or framerate across all instances.\n3. Run all instances as Administrator for process priority.",
    "yt_plan.md": "# YouTube Live Management Plan\n\n## 1. Pre-Event Preparation & Policy Compliance\n1. Ensure the YouTube channel is verified and in good standing.\n2. Technical Test (T-14 days): Conduct a 4-stream concurrent test on the target channel to confirm feasibility, as official policy is silent on limits.\n\n## 2. Event Creation Workflow (Day 1: Nov 6)\n1. Access YouTube Studio > Live Control Room > Manage.\n2. Schedule 4 distinct streams (Nodväst, Nodsyd, Nodöst, Nodmidd).\n3. Configuration Details (Per Stream):\n    - Title Format: Dagar om Lagar 2025 - [Node Name] (Dag 1)\n    - Visibility: Public\n    - Schedule: Nov 6, 2025, [Start Time]\n    - Thumbnail: Custom branded thumbnail for each node.\n    - Latency: Low Latency.\n    - Category: Education.\n\n## 3. Stream Key Management\n1. Retrieve the unique Stream Key and URL for each of the 4 events.\n2. Securely document and label the keys.\n3. Provide these keys to the A/V Production Agent for configuration in the 4 respective OBS instances.\n4. Enable Auto-Start and Auto-Stop for simplified operation.\n\n## 4. Day 1 Operations\n1. The A/V operator starts streaming from all 4 OBS instances.\n2. Monitor the Live Control Room dashboard to verify input health for all 4 events (Status: Excellent/Good).\n3. Transition all 4 events to 'Go Live' (Manually or via Auto-Start).\n4. Monitor stream health throughout the event.\n\n## 5. Day 2 Logic (Nov 7)\n1. Policy: Only Nodväst stream is active.\n2. Schedule a new event for Nodväst Day 2 (Nov 7).\n3. On Day 2, only the 'Nodväst' OBS instance will be started, using the Day 2 stream key.\n4. Web Platform UI remains unchanged; the other 3 players will display the 'Offline' or 'Completed' status from their Day 1 events.",
    "infranodus_plan.md": "# InfraNodus Integration Plan\n\n## 1. Integration Strategy\n**Primary Strategy:** iFrame Embedding. This is the most reliable and straightforward method for visualization.\n**Secondary Strategy (Data/AI):** MCP/API Integration (for backend data processing, if required).\n\n## 2. InfraNodus Configuration & Embedding\n1. Create the knowledge graph visualization within InfraNodus.\n2. Set the graph visibility to 'Public' or 'Unlisted'.\n3. Obtain the embeddable URL from the 'Share' feature.\n    - Example: \`https://infranodus.com/graph/username/graphname?embed=1\`\n\n## 3. Modal Integration in Next.js 15\n1. Create a reusable React component \`KnowledgeGraphModal.tsx\`.\n2. Utilize an accessible modal library (e.g., Radix UI Dialog, Headless UI) ensuring WCAG compliance (focus trapping, keyboard navigation).\n3. The modal will contain an \`<iframe>\` pointing to the InfraNodus URL.\n\n\`\`\`typescript\n// Example iframe snippet (TypeScript/JSX)\n<iframe\n  src=\"[InfraNodus Embed URL]\"\n  title=\"Kunskapsgraf för Dagar om Lagar 2025\" // Swedish title for accessibility\n  width=\"100%\"\n  height=\"80vh\" // Use viewport height for responsiveness\n  allowFullScreen\n  style={{ border: 'none' }}\n/>\n\`\`\`\n\n4. Implement a trigger button on the main streaming page (Label: \"Visa Kunskapsgraf\").\n\n## 4. MCP Server Configuration (Backend/API)\n1. InfraNodus MCP server integration is documented on GitHub [C10].\n2. This is relevant if backend data analysis or LLM augmentation is required.\n3. Implementation involves obtaining an InfraNodus API key and configuring backend processes (Next.js Server Actions or API Routes) to communicate with the MCP server. This is not required for visualization embedding.",
    "site_spec.md": "# Dagar om Lagar 2025 Web Platform Specification\n\n## 1. Tech Stack\n- Framework: Next.js 15 (App Router, utilizing React Server Components)\n- Language: TypeScript (Strict mode)\n- Styling: Tailwind CSS v4\n- i18n: i18next (react-i18next)\n- Deployment: Vercel (Recommended) or similar serverless platform.\n\n## 2. Component Architecture\n- \`app/[locale]/layout.tsx\`: Root layout. Dynamically sets \`lang\` and \`dir\` attributes.\n- \`components/Header.tsx\`: Navigation, logo, LocaleSwitcher.\n- \`components/StreamGrid.tsx\`: Responsive grid (e.g., 2x2) for the 4 video streams.\n- \`components/VideoPlayer.tsx\`: Wrapper for the YouTube embed iframe. Handles aspect ratio and responsiveness.\n- \`components/KnowledgeGraphModal.tsx\`: Modal for InfraNodus iframe.\n\n## 3. Routing Structure\n- \`app/[locale]/page.tsx\`: Main streaming page.\n- \`middleware.ts\`: Handle locale detection (browser preference) and redirection (default 'se').\n\n## 4. i18n Setup (Internationalization)\n- **Locales (6):** Swedish (se), English (en), Arabic (ar), Farsi (fa), Chinese (zh), Spanish (es).\n- **Implementation:** Use \`i18next\` configured for Next.js 15 App Router.\n- **RTL Support:** Arabic (ar) and Farsi (fa) require Right-to-Left support. Utilize Tailwind CSS logical properties (e.g., \`start-4\` instead of \`left-4\`, \`ms-4\` instead of \`ml-4\`) and ensure the \`dir=\"rtl\"\` attribute is set correctly on the \`<html>\` tag.\n\n## 5. Accessibility Requirements (A11y)\n- **Standard:** WCAG 2.2 Level AA compliance.\n- **Key Areas:**\n    - Semantic HTML (landmarks: header, main, nav, footer).\n    - Keyboard navigation and focus management (critical for modals and player controls).\n    - Color contrast (minimum 4.5:1 for text).\n    - ARIA labels for all interactive elements (e.g., Swedish label: \"Spela Ström Nodväst\").\n    - Screen reader compatibility for all locales, including RTL languages.\n\n## 6. Performance Budgets\n- **LCP (Largest Contentful Paint):** < 2.5 seconds.\n- **CLS (Cumulative Layout Shift):** < 0.1 (Ensure video embed dimensions are strictly defined).\n- **JS Bundle Size (Initial Load):** < 250KB.\n- **Optimization:** Lazy load YouTube iframes (using facade pattern until user interaction), optimize assets (Next/Image), utilize Server Components.",
    "manuals_outline.md": "# Custom Manuals Outline\n\n## 1. Integrated System Guide (Technical Staff)\n*Language: English*\n*Audience: Network Engineer, A/V Specialist, Technical Director*\n\n- **I. System Architecture Overview**\n    - Diagram: Inputs -> 4x OBS Instances -> Router -> Internet -> YouTube -> Web Platform\n    - Hardware Specifications (Streaming PC - High Spec, Router)\n- **II. Network Configuration (ASUS RT-AX86U Pro + Merlin)**\n    - Static IP Assignment for Streaming PC\n    - Adaptive QoS & FlexQoS Configuration (Step-by-Step Guide)\n    - Bandwidth Requirements (Min 70 Mbps uplink)\n    - Dual-WAN Failover Setup and Testing Protocol\n- **III. OBS Configuration (Multi-Instance Strategy)**\n    - Hardware Requirements and Stress Testing Protocol\n    - How to launch multiple instances (\`--multi\` argument)\n    - Profile Management (Nodväst, Nodsyd, Nodöst, Nodmidd)\n    - Assigning specific A/V inputs to specific instances\n    - Encoder Settings (NVENC, Bitrate, CBR - per instance)\n    - Stream Key Configuration (Per instance)\n- **IV. YouTube Live Control Room**\n    - Event Scheduling (4 Concurrent Events)\n    - Monitoring Stream Health (4 Dashboards simultaneously)\n    - Go-Live and End-Stream Procedures\n- **V. Troubleshooting & Disaster Recovery**\n    - Handling OBS Instance Crash (Restarting single instance)\n    - Network Failover Scenarios (Handling reduced capacity)\n    - GPU Encoder Overload (Symptoms and resolution - reducing quality/fps)\n\n## 2. Node Operator Quick Start\n*Language: English/Swedish*\n*Audience: On-site Staff managing A/V inputs and the OBS Workstation*\n\n- **I. Setup Checklist**\n    - Connecting Camera/Audio Source to the capture interface.\n    - Verifying signal input on the Central Streaming PC (Check specific OBS instance).\n- **II. Startup Sequence (Day 1)**\n    - Launching the 4 OBS instances (using dedicated shortcuts).\n    - Starting the streams in all 4 instances.\n    - Verifying 'Live' status in YouTube Control Room.\n- **III. Startup Sequence (Day 2 - Nodväst Only)**\n    - Launching only the Nodväst OBS instance.\n    - Starting the stream and verifying status.\n- **IV. Monitoring During Event**\n    - Monitoring OBS Stats (CPU usage, 0% dropped frames) across all 4 instances.\n    - Local Audio Level Monitoring.\n- **V. Communication Protocol**\n    - Contacting Central Technical Staff.\n    - Reporting Issues (Signal loss, performance degradation).\n\n## 3. DoL 2025 Webapp Guide (Användarhandbok)\n*Language: Swedish (Svenska)*\n*Audience: End Users/Attendees*\n\n- **I. Välkommen till Dagar om Lagar 2025 Live**\n    - Introduktion till plattformen.\n- **II. Navigering och Funktioner**\n    - Hur man väljer mellan de fyra strömmarna (Nodväst, Nodsyd, Nodöst, Nodmidd).\n    - Använda videospelaren (Volym, Kvalitet, Helskärm).\n    - Information om Dag 2 (Endast Nodväst är live).\n- **III. Kunskapsgraf (InfraNodus)**\n    - Vad är det och hur man öppnar den (Knappen \"Visa Kunskapsgraf\").\n    - Interaktion med grafen.\n- **IV. Byt Språk**\n    - Hur man använder språkväljaren i sidhuvudet.\n    - Tillgängliga språk (se, en, ar, fa, zh, es).\n- **V. Support**\n    - Vanliga frågor (FAQ) och felsökning (Buffring, ljudproblem)."
  },
  "5. Risk Matrix": [
    {
      "Risk": "Streaming PC Hardware Overload (4x OBS Instances)",
      "Likelihood": "High",
      "Impact": "Critical",
      "Mitigation": "Requires high-end CPU (Ryzen 9/i9) and powerful GPU (RTX 3080+) capable of 4+ simultaneous NVENC sessions. Mandatory full-duration (8hr) stress testing. Contingency: Reduce resolution/fps or use 2 separate PCs.",
      "Status": "High Priority Testing Needed"
    },
    {
      "Risk": "Uplink Bandwidth Saturation",
      "Likelihood": "High",
      "Impact": "Critical",
      "Mitigation": "Requires ~70 Mbps sustained upload. Secure 100Mbps+ fiber. Implement strict QoS (FlexQoS). Configure Dual-WAN failover with high-capacity 5G backup.",
      "Status": "Mitigation Planned"
    },
    {
      "Risk": "Operational Complexity (Managing 4 OBS Instances)",
      "Likelihood": "Medium",
      "Impact": "High",
      "Mitigation": "High risk of operator error managing 4 separate applications. Detailed training and clear documentation (Manual 2) are essential. Extensive rehearsals required.",
      "Status": "Mitigation Planned"
    },
    {
      "Risk": "YouTube Concurrent Stream Policy Enforcement",
      "Likelihood": "Low",
      "Impact": "Critical",
      "Mitigation": "While community verified, official policy is silent. Conduct a 4-stream test on the target channel ASAP. Contingency: Prepare 4 separate verified YouTube channels.",
      "Status": "Unverified ✗ (Requires live test)"
    },
    {
      "Risk": "RTL Language Layout & Accessibility Issues",
      "Likelihood": "Medium",
      "Impact": "Medium",
      "Mitigation": "Arabic and Farsi (RTL) require careful implementation for WCAG compliance. Use Tailwind logical properties and conduct thorough QA with native speakers and accessibility tools.",
      "Status": "Planned"
    }
  ],
  "6. Final JSON Output": {
    "metadata": {
      "agent_id": "gemini-2.5-pro-ultra-deep-research-v2.0",
      "timestamp": "2025-10-14T09:53:01Z",
      "execution_time_ms": 0,
      "status": "completed"
    },
    "bundle_version": "2.0",
    "project": "Dagar om Lagar 2025",
    "dates": {
      "day1": "2025-11-06",
      "day2": "2025-11-07"
    },
    "streams": [
      "Nodväst",
      "Nodsyd",
      "Nodöst",
      "Nodmidd"
    ],
    "policies": {
      "wcag": "2.2 AA",
      "autoplay": "user-gesture-only",
      "youtube_concurrency": "Community verified ≤10; Officially Undefined (Unverified ✗)"
    },
    "plans": {
      "router_plan_path": "plans/router_plan.md",
      "obs_plan_path": "plans/obs_plan.md",
      "yt_plan_path": "plans/yt_plan.md",
      "infranodus_plan_path": "plans/infranodus_plan.md",
      "site_spec_path": "plans/site_spec.md",
      "manuals_outline_path": "plans/manuals_outline.md"
    },
    "manuals_required": [
      "ASUS RT-AX86U Pro",
      "Asuswrt-Merlin",
      "OBS (Multi-Instance)",
      "InfraNodus Embedding & MCP",
      "YouTube Studio",
      "YouTube Live Streaming API"
    ],
    "citations": [
      {
        "id": "C1",
        "url": "https://www.asus.com/in/supportonly/rt-ax86u%20pro/helpdesk_manual/",
        "title": "RT-AX86U Pro - Support - ASUS",
        "access_date": "2025-10-14"
      },
      {
        "id": "C2",
        "url": "https://www.asuswrt-merlin.net/docs",
        "title": "Documentation | Asuswrt-Merlin",
        "access_date": "2025-10-14"
      },
      {
        "id": "C3",
        "url": "https://obsproject.com/kb/launch-parameters",
        "title": "Launch Parameters - OBS Studio",
        "access_date": "2025-10-14"
      },
      {
        "id": "C4",
        "url": "https://infranodus.com/docs/network-analysis",
        "title": "Network Analysis and Visualization — InfraNodus.Com",
        "access_date": "2025-10-14"
      },
      {
        "id": "C5",
        "url": "https://developers.google.com/youtube/v3/live/getting-started",
        "title": "YouTube Live Streaming API Overview | Google for Developers",
        "access_date": "2025-10-14"
      },
      {
        "id": "C6",
        "url": "https://support.google.com/youtube/answer/2907883?hl=en",
        "title": "Create a YouTube live stream with an encoder - Google Help",
        "access_date": "2025-10-14"
      },
      {
        "id": "C7",
        "url": "https://support.google.com/youtubetv/answer/13842245?hl=en",
        "title": "Set your home network to watch without screen limits - YouTube TV Help",
        "access_date": "2025-10-14"
      },
      {
        "id": "C8",
        "url": "https://obsproject.com/forum/threads/how-to-record-multiple-scenes-separately.155039/",
        "title": "How to record multiple scenes separately? | OBS Forums",
        "access_date": "2025-10-14"
      },
      {
        "id": "C9",
        "url": "https://alive-project.com/en/streamer-magazine/article/7725/",
        "title": "OBS Requirements Guide | Streamer Magazine - Alive Project",
        "access_date": "2025-10-14"
      },
      {
        "id": "C10",
        "url": "https://github.com/infranodus/mcp-server-infranodus",
        "title": "The official InfraNodus MCP server - GitHub",
        "access_date": "2025-10-14"
      },
      {
        "id": "C11",
        "url": "https://www.byteplus.com/en/topic/52128",
        "title": "How much bandwidth is needed for 1080p 60fps streaming? - BytePlus",
        "access_date": "2025-10-14"
      },
      {
        "id": "C12",
        "url": "https://www.asus.com/us/support/faq/1010935/",
        "title": "[Adaptive QoS] Introduction and settings of QoS on ASUS Router | Official Support",
        "access_date": "2025-10-14"
      },
      {
        "id": "C13",
        "url": "https://github.com/dave14305/FlexQoS",
        "title": "FlexQoS - Flexible QoS Enhancement Script for Adaptive QoS on ASUSWRT-Merlin - GitHub",
        "access_date": "2025-10-14"
      }
    ],
    "tech_stack": {
      "framework": "Next.js 15",
      "language": "TypeScript",
      "styling": "Tailwind CSS v4",
      "i18n": "i18next"
    },
    "performance": {
      "LCP": "<2.5 s",
      "CLS": "<0.1",
      "JS_budget_kb": 250
    },
    "locales": [
      "se",
      "en",
      "ar",
      "fa",
      "zh",
      "es"
    ],
    "day2_policy": "Only Nodväst active; UI unchanged, inactive streams show offline/ended status."
  }
}
