{'goal': 'Critically re-evaluate and iterate our frontend build tooling with a balance of DX and performance.', 'context': {'currentStack': {'bundler': 'Webpack', 'alternativesConsidered': ['Vite']}, 'environment': 'Node 18+, React 18, TypeScript, i18n, SSR in production', 'devContext': 'CLI via iTerm2 using Claude Code Sonnet 4.5 with Ultrathink. MCPs: context7, desktopcommander, buildoracle, perfmonk, stackhistorian', 'qualityStandard': 'Balance best-in-class DX with top-tier performance. Extra implementation effort acceptable for long-term maintainability and speed.'}, 'task': 'Function as an elite systems architect and DX/performance specialist. Analyze whether Webpack should be replaced by Vite or enhanced. Consider plugin ecosystem, HMR, SSR performance, caching, extensibility, DX ergonomics, CI/CD implications, build times, and final bundle size.', 'additionalDirectives': ['Quantify performance differences where possible, include CLI commands or test scenarios.', 'Flag breaking changes and transition friction areas with mitigation strategies.', 'Recommend DX-forward improvements like dev server speed, editor integration, plugin config ergonomics.', 'Include detailed CLI commands for refactor, plugin migration, cache inspection, SSR testing.', 'Propose ecosystem-level changes: CI, test runners, preloading strategies, mocking, live preview tools.', 'Avoid simplifications. You are advising a team capable of handling any complexity.'], 'mcpSuggestions': ['buildoracle', 'perfmonk', 'stackhistorian', 'joyloop', 'devsavant', 'metricslayer'], 'outputStyle': 'Structured, highly technical, team-lead tone. Mix stats, benchmarks, CLI usage, and architecture-level insight.'}